hist(data_2011$residuals3, main = "Histogram of model residuals",
xlab = "Residuals")
hist(data_2011$residuals1, main = "Histogram of model residuals",
xlab = "Residuals")
hist(data_2011$residuals2, main = "Histogram of model residuals",
xlab = "Residuals")
hist(data_2011$residuals3, main = "Histogram of model residuals",
xlab = "Residuals")
hist(data_2011$residuals4, main = "Histogram of model residuals",
xlab = "Residuals")
hist(data_2011$residuals3, main = "Histogram of model residuals",
xlab = "Residuals")
# Configurar a grade de 2x2
par(mfrow = c(2, 2))
# Plotar os histogramas
hist(data_2011$residuals1, main = "Histogram of Model Residuals (Model 1)",
xlab = "Residuals")
hist(data_2011$residuals2, main = "Histogram of Model Residuals (Model 2)",
xlab = "Residuals")
hist(data_2011$residuals3, main = "Histogram of Model Residuals (Model 3)",
xlab = "Residuals")
hist(data_2011$residuals4, main = "Histogram of Model Residuals (Model 4)",
xlab = "Residuals")
# Restaurar a configuração padrão para evitar efeitos em outros gráficos
par(mfrow = c(1, 1))
# Plotar os histogramas
hist(data_2011$residuals1, main = "Histogram of Model Residuals (Model 1)",
xlab = "Residuals", col = "#A6CEE3")
# Configurar a grade de 2x2
par(mfrow = c(2, 2))
# Plotar os histogramas
hist(data_2011$residuals1, main = "Histogram of Model Residuals (Model 1)",
xlab = "Residuals", col = "#A6CEE3")
hist(data_2011$residuals2, main = "Histogram of Model Residuals (Model 2)",
xlab = "Residuals", col = "#B2DF8A")
hist(data_2011$residuals3, main = "Histogram of Model Residuals (Model 3)",
xlab = "Residuals", col = "#FFFF99")
hist(data_2011$residuals4, main = "Histogram of Model Residuals (Model 4)",
xlab = "Residuals", col = "#FF9A98")
data_2011$residuals4 <- data_2011$lnLife_Expectancy-data_2011$prediction4
mean(data_2011$residuals4)
# Configurar a grade de 2x2
par(mfrow = c(2, 2))
# Plotar os histogramas
hist(data_2011$residuals1, main = "Histogram of Model Residuals (Model 1)",
xlab = "Residuals", col = "#A6CEE3")
hist(data_2011$residuals2, main = "Histogram of Model Residuals (Model 2)",
xlab = "Residuals", col = "#B2DF8A")
hist(data_2011$residuals3, main = "Histogram of Model Residuals (Model 3)",
xlab = "Residuals", col = "#FFFF99")
hist(data_2011$residuals4, main = "Histogram of Model Residuals (Model 4)",
xlab = "Residuals", col = "#FF9A98")
# Configurar a grade de 2x2
par(mfrow = c(2, 2))
# Plotar os histogramas
hist(data_2011$residuals1, main = "Histogram of Model Residuals (Model 1)",
xlab = "Residuals (in years)", col = "#A6CEE3")
hist(data_2011$residuals2, main = "Histogram of Model Residuals (Model 2)",
xlab = "Residuals (in years)", col = "#B2DF8A")
hist(data_2011$residuals3, main = "Histogram of Model Residuals (Model 3)",
xlab = "Residuals (in years)", col = "#FFFF99")
hist(data_2011$residuals4, main = "Histogram of Model Residuals (Model 4)",
xlab = "Residuals", col = "#FF9A98")
# Restaurar a configuração padrão para evitar efeitos em outros gráficos
par(mfrow = c(1, 1))
# Configurar a grade de 2x2
par(mfrow = c(2, 2))
# Plotar os histogramas
hist(data_2011$residuals1, main = "Histogram of Model 1 Residuals",
xlab = "Residuals", col = "#A6CEE3")
hist(data_2011$residuals2, main = "Histogram of Model 2 Residuals",
xlab = "Residuals", col = "#B2DF8A")
hist(data_2011$residuals3, main = "Histogram of Model 3 Residuals",
xlab = "Residuals", col = "#FFFF99")
hist(data_2011$residuals4, main = "Histogram of Model 4 Residuals",
xlab = "Residuals", col = "#FF9A98")
# Configurar a grade de 2x2
par(mfrow = c(2, 2))
# Gráfico de dispersão para modelo 1 com linha de identidade
plot(data_2011$prediction1, data_2011$Life_Expectancy,
main = "Previsto vs. Observado (Modelo 1)",
xlab = "Previsto", ylab = "Observado", col = "blue", pch = 16)
abline(0, 1, col = "red")  # Adiciona uma linha de identidade
# Gráfico de dispersão para modelo 2 com linha de identidade
plot(data_2011$prediction2, data_2011$Life_Expectancy,
main = "Previsto vs. Observado (Modelo 2)",
xlab = "Previsto", ylab = "Observado", col = "green", pch = 16)
abline(0, 1, col = "red")  # Adiciona uma linha de identidade
# Gráfico de dispersão para modelo 3 com linha de identidade
plot(data_2011$prediction3, data_2011$Life_Expectancy,
main = "Previsto vs. Observado (Modelo 3)",
xlab = "Previsto", ylab = "Observado", col = "orange", pch = 16)
abline(0, 1, col = "red")  # Adiciona uma linha de identidade
# Gráfico de dispersão para modelo 4 com linha de identidade
plot(data_2011$prediction4, data_2011$Life_Expectancy,
main = "Previsto vs. Observado (Modelo 4)",
xlab = "Previsto", ylab = "Observado", col = "red", pch = 16)
abline(0, 1, col = "red")  # Adiciona uma linha de identidade
abline(0, 1, col = "red")  # Adiciona uma linha de identidade
# Restaurar a configuração padrão para evitar efeitos em outros gráficos
par(mfrow = c(1, 1))
# Configurar a grade de 2x2
par(mfrow = c(2, 2))
# Gráfico de dispersão para modelo 1 com linha de identidade
plot(data_2011$prediction1, data_2011$Life_Expectancy,
main = "Previsto vs. Observado (Modelo 1)",
xlab = "Previsto", ylab = "Observado", col = "blue", pch = 16)
abline(0, 1, col = "red")  # Adiciona uma linha de identidade
# Gráfico de dispersão para modelo 2 com linha de identidade
plot(data_2011$prediction2, data_2011$Life_Expectancy,
main = "Previsto vs. Observado (Modelo 2)",
xlab = "Previsto", ylab = "Observado", col = "green", pch = 16)
abline(0, 1, col = "red")  # Adiciona uma linha de identidade
# Gráfico de dispersão para modelo 3 com linha de identidade
plot(data_2011$prediction3, data_2011$Life_Expectancy,
main = "Previsto vs. Observado (Modelo 3)",
xlab = "Previsto", ylab = "Observado", col = "orange", pch = 16)
abline(0, 1, col = "red")  # Adiciona uma linha de identidade
# Gráfico de dispersão para modelo 4 com linha de identidade
plot(data_2011$prediction4, data_2011$Life_Expectancy,
main = "Previsto vs. Observado (Modelo 4)",
xlab = "Previsto", ylab = "Observado", col = "red", pch = 16)
abline(0, 1, col = "red")  # Adiciona uma linha de identidade
# Restaurar a configuração padrão para evitar efeitos em outros gráficos
par(mfrow = c(1, 1))
# Configurar a grade de 2x2
par(mfrow = c(2, 2))
# Plotar os histogramas
hist(data_2011$residuals1, main = "Histogram of Model 1 Residuals",
xlab = "Residuals", col = "#A6CEE3")
hist(data_2011$residuals2, main = "Histogram of Model 2 Residuals",
xlab = "Residuals", col = "#B2DF8A")
hist(data_2011$residuals3, main = "Histogram of Model 3 Residuals",
xlab = "Residuals", col = "#FFFF99")
hist(data_2011$residuals4, main = "Histogram of Model 4 Residuals",
xlab = "Residuals", col = "#FF9A98")
# Restaurar a configuração padrão para evitar efeitos em outros gráficos
par(mfrow = c(1, 1))
# Adding a regression line to the scatter plot
plot(data_2011$Life_Expectancy~data_2011$Alcohol,
main = "Relationship between Life Expectancy and Alcohol",
xlab = "Life expectancy (in years)",
ylab = "Alcohol consumption (in litres of pure alcohol)")
abline(model1)
# Adding a regression line to the scatter plot
plot(data_2011$Life_Expectancy~data_2011$Alcohol,
main = "Relationship between Life Expectancy and Alcohol",
xlab = "Life expectancy (in years)",
ylab = "Alcohol (in litres of pure alcohol)")
abline(model1)
abline(model1, col = "red")
load("~/3. Econometrics 1/BS2280/RLecture6/EAWE21.Rdata")
View(EAWE21)
# Regressing the number of police officers on crimes
model1 <- lm(data_2011$Life_Expectancy~data_2011$Alcohol,data=data_2011)
model1
# Goodness of fits of the estimated model
summary(model1)
# Define the significance level
alpha <- 0.05
# Define degrees of freedom
df <- 169
# Find the t-critical value
t_critical <- qt(1 - alpha/2, df)
print(t_critical)
# Adding a regression line to the scatter plot
plot(data_2011$Life_Expectancy~data_2011$Alcohol,
main = "Relationship between Life Expectancy and Alcohol",
xlab = "Life expectancy (in years)",
ylab = "Alcohol (in litres of pure alcohol)")
abline(model1, col = "red")
# Formatting the table of results
stargazer(model1,
type = "html",
title="Table 1: Simple Linear Model Results",
summary = TRUE,
align=TRUE,
no.space=TRUE,
out = "C:/Users/maria/OneDrive/Documentos/3. Econometrics 1/BS2280/Coursework2/Model1.htm",
report=("vcstp"))
# Goodness of fits of the estimated model
summary(model1)
# Formatting the table of results
stargazer(model1,
type = "html",
title="Table 1: Simple Linear Model Results",
summary = TRUE,
align=TRUE,
no.space=TRUE,
out = "C:/Users/maria/OneDrive/Documentos/3. Econometrics 1/BS2280/Coursework2/Model1.htm",
report=("vcstp"),
digits = -2)
# Formatting the table of results
stargazer(model1,
type = "html",
title="Table 1: Simple Linear Model Results",
summary = TRUE,
align=TRUE,
no.space=TRUE,
out = "C:/Users/maria/OneDrive/Documentos/3. Econometrics 1/BS2280/Coursework2/Model1.htm",
report=("vcstp"),
style = list(p = function(x) format(x, scientific = TRUE, digits = 2)))
# Formatting the table of results
stargazer(model1,
type = "html",
title="Table 1: Simple Linear Model Results",
summary = TRUE,
align=TRUE,
no.space=TRUE,
out = "C:/Users/maria/OneDrive/Documentos/3. Econometrics 1/BS2280/Coursework2/Model1.htm",
report=("vcstp"))
# Formatting the table of results
stargazer(model2,
type = "html",
title="Table 2: Multiple Linear Regression Model I Results",
summary = TRUE,
align=TRUE,
no.space=TRUE,
report=("vcstp"),
out = "C:/Users/maria/OneDrive/Documentos/3. Econometrics 1/BS2280/Coursework2/Model2.htm")
summary(model2)
# Degrees of freedom
df1 <- 2
df2 <- 496
# Significance level
significance_level <- 0.05
# Find critical F value
critical_F <- qf(1 - significance_level, df1, df2)
# Print the result
print(critical_F)
# Get information abour RSS
anova(model1)
anova(model2)
# Obtain ANOVA table
anova_table <- anova(model2)
# Obtain stargazer output for the model
model_summary <- stargazer(model2, type = "text")
# Extract residuals
residuals <- resid(model2)
# Add residuals to the stargazer output
output_with_residuals <- paste(model_summary, "\nResiduals", round(residuals, 2))
# Print or save the combined output
cat(output_with_residuals)
# Add residuals to the stargazer output
output_with_residuals <- paste(model_summary, "\n\nANOVA Table:\n", round(anova_table, 2))
# Print or save the combined output
cat(output_with_residuals)
# Install and load required packages
install.packages("officer")
install.packages("flextable")
library(officer)
library(flextable)
# Obtain ANOVA table
anova_table <- anova(model2)
# Create a flextable from the ANOVA table
flextable_anova <- flextable(anova_table) %>%
set_table_properties(layout = "autofit") %>%
set_table_properties(width = .75) %>%
set_table_properties(border = "all")
# Create a flextable from the ANOVA table
flextable_anova <- flextable(anova_table) |>
set_table_properties(layout = "autofit") |>
set_table_properties(width = .75) |>
set_table_properties(border = "all")
# Create a flextable from the ANOVA table
flextable_anova <- flextable(anova_table) |>
set_table_properties(layout = "autofit") |>
set_table_properties(width = .75)
# Save the HTML content to a file
html_content <- paste(as_paragraph(flextable_anova), collapse = "\n")
flextable_anova
anova_table
# Create a table from the ANOVA table
install.packages("xtable")
install.packages("xtable")
require(xtable)
print(xtable(anova_mod), type = "html")
print(xtable(anova_table), type = "html")
file_path <- "formatted_anova.html"
sink(file_path)
xtable_anova <- xtable(anova_table)
cat(print(xtable_anova, type = "html"))
sink()
file_path
sink(file_path)
options(xtable.floating = FALSE)
options(xtable.timestamp = "")
xtable_anova <- xtable(anova_table)
cat(print(xtable_anova, type = "html"))
sink()
xtable_anova <- xtable(anova_table)
# Customize xtable appearance
options(xtable.floating = FALSE)  # Disable floating
options(xtable.timestamp = "")     # Disable timestamp
# Set column and table captions
caption <- "ANOVA Table"
colnames(xtable_anova) <- c("Source", "DF", "Sum of Squares", "Mean Square", "F Value", "Pr(>F)")
colnames(xtable_anova) <- c("DF", "Sum of Squares", "Mean Square", "F Value", "Pr(>F)")
# Save the HTML content to a file
file_path <- "formatted_anova.html"
sink(file_path)
print(xtable_anova, type = "html", caption = caption)
print(xtable_anova, type = "html")
sink()
xtable_anova <- xtable(anova_table)
# Save the HTML content to a file
print(xtable_anova, type = "latex")
# Save the HTML content to a file
latex_table <- print(xtable_anova, type = "latex")
# Convert LaTeX to HTML using pander
html_output <- pander(latex_table, format = "html")
install.packages("pander")
library(pander)
# Convert LaTeX to HTML using pander
html_output <- pander(latex_table, format = "html")
# Save the HTML content to a file
file_path <- "converted_table.html"
writeLines(html_output, file_path)
anova_table
# Get information abour RSS
anova(model1)
# Obtain ANOVA table
anova_table1 <- anova(model1)
# Create a table from the ANOVA table
xtable_anova1 <- xtable(anova_table1)
# Save the HTML content to a file
print(xtable_anova1, type = "latex")
anova_table1
anova_table2
anova_table
# Print the result
print(critical_F)
df2 <- 167
# Degrees of freedom
df1 <- 2
# Significance level
significance_level <- 0.05
# Find critical F value
critical_F <- qf(1 - significance_level, df1, df2)
# Print the result
print(critical_F)
# Formatting the table of results
stargazer(model3,
type = "html",
title="Table 3: Multiple Linear Regression Model II Results",
summary = TRUE,
align=TRUE,
no.space=TRUE,
report=("vcstp"),
out = "C:/Users/maria/OneDrive/Documentos/3. Econometrics 1/BS2280/Coursework2/Model3.htm")
summary(model4)
# Formatting the table of results
stargazer(model4,
type = "html",
title="Table 4: Logarithmic Model Results",
summary = TRUE,
align=TRUE,
no.space=TRUE,
report=("vcstp"),
out = "C:/Users/maria/OneDrive/Documentos/3. Econometrics 1/BS2280/Coursework2/Model4.htm")
# Comparison of All Models
stargazer(model1, model2, model3, model4,
type = "html",
title="Table 5: Comparison of Models Results",
summary = TRUE,
align=TRUE,
no.space=TRUE,
report=("vcstp"),
out = "C:/Users/maria/OneDrive/Documentos/3. Econometrics 1/BS2280/Coursework2/All_Models.htm")
# Define the significance level
alpha <- 0.05
# Define degrees of freedom
df <- 169
# Find the t-critical value
t_critical <- qt(1 - alpha/2, df)
print(t_critical)
# Preparing workspace
setwd("C:/Users/maria/OneDrive/Documentos/3. Econometrics 1/BS2280/Coursework2")
install.packages("xtable")
# Loading libraries
library(readxl)
library(stargazer)
library(xtable)
# Importing the dataset
data_2011 <- read_excel("2011lifeexpectancy.xls")
# Model 1.	Simple Linear Regression Model
# Regressing life expectancy on alcohol consumption
model1 <- lm(data_2011$Life_Expectancy~data_2011$Alcohol,data=data_2011)
model1
# Goodness of fits of the estimated model
summary(model1)
# Formatting the table of results
stargazer(model1,
type = "html",
title="Table 1: Simple Linear Model Results",
summary = TRUE,
align=TRUE,
no.space=TRUE,
out = "C:/Users/maria/OneDrive/Documentos/3. Econometrics 1/BS2280/Coursework2/Model1.htm",
report=("vcstp"))
# Creating a scatter plot with a regression line
plot(data_2011$Life_Expectancy~data_2011$Alcohol,
main = "Relationship between Life Expectancy and Alcohol",
xlab = "Life expectancy (in years)",
ylab = "Alcohol (in litres of pure alcohol)")
abline(model1, col = "red")
# Obtaining ANOVA table
anova_table1 <- anova(model1)
# Creating a table from the ANOVA table
xtable_anova1 <- xtable(anova_table1)
# Saving it to a file
print(xtable_anova1, type = "latex")
# Model 2.	Multiple linear regression model I
# Adding Schooling and BMI to the regression model
model2 <- lm(Life_Expectancy~Alcohol+Schooling+BMI,data=data_2011)
summary(model2)
# Formatting the table of results
stargazer(model2,
type = "html",
title="Table 2: Multiple Linear Regression Model I Results",
summary = TRUE,
align=TRUE,
no.space=TRUE,
report=("vcstp"),
out = "C:/Users/maria/OneDrive/Documentos/3. Econometrics 1/BS2280/Coursework2/Model2.htm")
# Obtaining ANOVA table
anova_table2 <- anova(model2)
# Creating a table from the ANOVA table
xtable_anova2 <- xtable(anova_table2)
# Saving it to a file
print(xtable_anova2, type = "latex")
# Model 3.	Multiple linear regression model II
# Including the quadratic term of the Schooling variable
model3 <- lm(Life_Expectancy ~ Alcohol + Schooling + I(Schooling^2) + BMI, data = data_2011)
summary(model3)
# Formatting the table of results
stargazer(model3,
type = "html",
title="Table 3: Multiple Linear Regression Model II Results",
summary = TRUE,
align=TRUE,
no.space=TRUE,
report=("vcstp"),
out = "C:/Users/maria/OneDrive/Documentos/3. Econometrics 1/BS2280/Coursework2/Model3.htm")
# Model 4. Logarithmic Model
# Making the log transformation
data_2011$lnLife_Expectancy <- log(data_2011$Life_Expectancy)
data_2011$lnSchooling <- log(data_2011$Schooling)
# Building the new model
model4 <- lm(lnLife_Expectancy ~ Alcohol + lnSchooling + BMI, data = data_2011)
summary(model4)
# Formatting the table of results
stargazer(model4,
type = "html",
title="Table 4: Logarithmic Model Results",
summary = TRUE,
align=TRUE,
no.space=TRUE,
report=("vcstp"),
out = "C:/Users/maria/OneDrive/Documentos/3. Econometrics 1/BS2280/Coursework2/Model4.htm")
# Comparing all models
stargazer(model1, model2, model3, model4,
type = "html",
title="Table 5: Comparison of Models Results",
summary = TRUE,
align=TRUE,
no.space=TRUE,
report=("vcstp"),
out = "C:/Users/maria/OneDrive/Documentos/3. Econometrics 1/BS2280/Coursework2/All_Models.htm")
# Predicting life expectancy data with each model
data_2011$prediction1 <- predict(model1, newdata=data.frame(Alcohol=data_2011$Alcohol))
data_2011$prediction2 <- predict(model2, newdata=data.frame(Alcohol = data_2011$Alcohol,
Schooling = data_2011$Schooling,
BMI = data_2011$BMI))
data_2011$prediction3 <- predict(model3, newdata=data.frame(Alcohol = data_2011$Alcohol,
Schooling = data_2011$Schooling,
Schooling_squared = data_2011$Schooling^2,
BMI = data_2011$BMI))
data_2011$prediction4 <- predict(model4, newdata=data.frame(Alcohol = data_2011$Alcohol,
lnSchooling = data_2011$lnSchooling,
BMI = data_2011$BMI))
# Calculating the residuals
data_2011$residuals1 <- data_2011$Life_Expectancy-data_2011$prediction1
data_2011$residuals2 <- data_2011$Life_Expectancy-data_2011$prediction2
data_2011$residuals3 <- data_2011$Life_Expectancy-data_2011$prediction3
data_2011$residuals4 <- data_2011$lnLife_Expectancy-data_2011$prediction4
# Plotting the histograms of residuals
par(mfrow = c(2, 2))
hist(data_2011$residuals1, main = "Histogram of Model 1 Residuals",
xlab = "Residuals", col = "#A6CEE3")
hist(data_2011$residuals2, main = "Histogram of Model 2 Residuals",
xlab = "Residuals", col = "#B2DF8A")
hist(data_2011$residuals3, main = "Histogram of Model 3 Residuals",
xlab = "Residuals", col = "#FFFF99")
hist(data_2011$residuals4, main = "Histogram of Model 4 Residuals",
xlab = "Residuals", col = "#FF9A98")
par(mfrow = c(1, 1))
# Finding the t-critical value
alpha <- 0.05
df <- 169
t_critical <- qt(1 - alpha/2, df)
print(t_critical)
# Finding f-critical value
df1 <- 2
df2 <- 167
significance_level <- 0.05
f_critical <- qf(1 - significance_level, df1, df2)
print(f_critical)
print(anova_table1)
# Obtaining ANOVA table
anova_table2 <- anova(model2)
print(anova_table2)
